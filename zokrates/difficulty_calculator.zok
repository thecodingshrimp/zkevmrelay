import "utils/casts/u64_to_field" as u64_to_field
import "utils/casts/field_to_u64" as field_to_u64

// taken from https://github.com/ethereum/go-ethereum/blob/d8ff53dfb8a516f47db37dbc7fd7ad18a1e8a125/consensus/ethash/consensus.go#L456
// calculates frontier difficulty
def main(u64 parent_diff, u64 parent_time, u64 time, u64 block_number) -> u64:
    // calculate x (H_d / 2048)
    u64 adjust = parent_diff / 2048

    u64 diff = if time - parent_time < 13 then parent_diff + adjust else parent_diff - adjust fi
    // check if smaller than min difficulty
    diff = if diff < 131072 then 131072 else diff fi

    // todo add if we go over 100000 blocks.
    // // add epsilon (2^(period_count - 2))
    // period_count = block_number / 100000
    // field exp_diff = u64_to_field(period_count) - 2
    // exp_diff = 2 ** exp_diff
    // diff = if period_count > 0 then diff + field_to_u64(exp_diff) else diff fi

    // diff = if diff < 131072 then 131072 else diff fi
    return diff