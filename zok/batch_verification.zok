import "./verify_header.zok" as verify_header
import "./full_header_hash" as full_header_hash

const u32 BATCH_SIZE = 1
def main(u64 parent_difficulty, u64 parent_time, u64[4] parent_hash, private u64[BATCH_SIZE][71] rlp_headers, private u32[BATCH_SIZE][64][32] values, private u32[BATCH_SIZE][64] indexes, private u32[BATCH_SIZE][64][24][8] proofs) -> (u64[4]):
    u64 curr_parent_diff = parent_difficulty
    u64 curr_parent_time = parent_time
    u32 block_header_byte_length_with_rlp = 0
    u64[4] curr_parent_hash = parent_hash
    for u32 i in 0..BATCH_SIZE do
        block_header_byte_length_with_rlp, curr_parent_diff, curr_parent_time = verify_header(curr_parent_diff, curr_parent_time, curr_parent_hash, rlp_headers[i], values[i], indexes[i], proofs[i])
        curr_parent_hash = full_header_hash(rlp_headers[i], block_header_byte_length_with_rlp)
    endfor
    return curr_parent_hash